/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'wendt' at '16.12.15 11:58' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

version = '1.0.0'
group 'at.tuwien.ict.commonutils'
sourceCompatibility = 1.8	//Java version
targetCompatibility = 1.8

def bundleSymbolicName = 'at.tuwien.ict.commonutils.configbuilder'
def bundleName = 'Configuration Manager'
def classpathprefix = 'lib/'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    mavenLocal()
  	//mavenCentral artifactUrls:['file://${basedir}/lib']
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.15'
	
	compile 'ch.qos.logback:logback-core:1.1.3'											//Use logback for this driver
  	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.codehaus.janino:janino:2.7.8'	//For color
    compile 'org.codehaus.janino:commons-compiler:2.7.8'
    compile 'org.fusesource.jansi:jansi:1.11'
  	
  	compile files('lib/gson-2.3.1.jar')
  	//compile files('lib/json-simple-1.1.1.jar')
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

//Create custom tasks
task copyDependencies(type: Copy) {	//Create a task to copy all dependencies from the standard "compile-configuration" into a folder
   from configurations.compile
   into 'dependencies'
}

task copyBundleFile(type: Copy) {
	copy {
        from 'build/libs/' + project.name + '-' + version + '.jar'
        into "deploy/configuration-manager"
    }
}

jar {
    baseName 'configuration-manager'-project.version
	//Generate a manifest file
	manifest { 
		version = project.version.replace('-','.');	//Create a version in the manifest from the variable "version" of this file
		//symbolicName = bundleSymbolicName
		name = bundleName
		
		//Classpath
		//attributes(
		//	'Class-Path': configurations.compile.collect { it.getName() }.join(' '), 
		//	'Main-Class': 'at.tuwien.ict.commonutils.configbuilder.Maintester')
    }
	
	//into('lib') {
    //	from configurations.compile
    //}
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId project.group
        artifactId 'configuration-manager'
        version project.version
        inceptionYear '2016'
        packaging 'jar'
        licenses {
            license {
                name 'Eclipse Public License (Version 1.0)'
                url 'http://www.eclipse.org/legal/epl-v10.html'
                distribution 'repo'
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            mavenLocal()
        }
    }
}



